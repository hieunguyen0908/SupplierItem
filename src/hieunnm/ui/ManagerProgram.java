/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hieunnm.ui;

import hieunnm.dtos.ItemDTO;
import hieunnm.dtos.SupplierDTO;
import hieunnm.daos.SupplierDAO;
import hieunnm.daos.ItemDAO;
import java.util.StringTokenizer;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PC
 */
public class ManagerProgram extends javax.swing.JFrame {

    /**
     * Creates new form ManagerProgram
     */
    DefaultTableModel modelSup = new DefaultTableModel();
    DefaultTableModel modelItems = new DefaultTableModel();
    Vector<ItemDTO> vector = new Vector<>();
    Vector<SupplierDTO> vectorSup = new Vector();
    Vector headerItems = new Vector<>();
    Vector headerSups = new Vector();
    Vector comboboxItem = new Vector();
    Vector<String> nameSup = new Vector();
    int count;
    long countDB, numberpage, page;
    boolean addItem = false;
    boolean addSup = false;
    boolean selectSup = false;
    boolean selectItem = false;

    public ManagerProgram() {
        initComponents();
        modelItems = (DefaultTableModel) tblItems.getModel();
        this.setResizable(false);
        headerItems.add("Code");
        headerItems.add("Name");
        headerItems.add("Supplier");
        headerItems.add("Unit");
        headerItems.add("Price");
        headerItems.add("Supply");
        modelItems.setColumnIdentifiers(headerItems);
        viewSup();
        viewItems(1);
    }

    public void loadDataSup() {
        try {
            SupplierDAO dao = new SupplierDAO();
            vectorSup = dao.loadSupplier();
            for (int i = 0; i < vectorSup.size(); i++) {
                modelSup.addRow(vectorSup.get(i).toVector());
                cbItem.addItem(vectorSup.get(i).getSupCode() + "-" + vectorSup.get(i).getSupName());
                nameSup.add(vectorSup.get(i).getSupCode() + "-" + vectorSup.get(i).getSupName());
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error");
            Logger.getLogger(ManagerProgram.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Phan trang
    public void viewItems(long page) {
        ItemDAO dao = new ItemDAO();
        modelItems.getDataVector().removeAllElements();
        try {
            countDB = dao.countDB();
            if (countDB % 5 == 0) {
                numberpage = countDB / 5;
            } else {
                numberpage = countDB / 5 + 1;
            }
            vector = dao.getJDPC(page);
            for (int i = 0; i < vector.size(); i++) {
                modelItems.addRow(vector.get(i).getVector());
                modelItems.setValueAt(nameSup.get(findID(vector.get(i).getSubCode())), i, 2);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public int findID(String supCode) {
        for (int i = 0; i < nameSup.size(); i++) {

            if (nameSup.get(i).contains(supCode.trim())) {
                return i;
            }
        }
        return -1;
    }

    public boolean valid(String code, String ER, String nameER) {
        if (!code.matches(ER)) {
            JOptionPane.showMessageDialog(this, "Invalid " + nameER);

            return false;
        }
        return true;
    }

    public void viewSup() {
        cbItem.removeAllItems();
        modelSup = (DefaultTableModel) tblSuppliers.getModel();
        modelSup.getDataVector().removeAllElements();
        headerSups.add("Code");
        headerSups.add("Name");
        headerSups.add("Address");
        modelSup.setColumnIdentifiers(headerSups);
        loadDataSup();
    }

    public void clearTxtSup() {
        txtSupCode.setText("");
        txtSupName.setText("");
        txtAddress.setText("");
        cbxColloborating.setSelected(false);
    }

    public void clearTxtItem() {
        txtItemCode.setText("");
        txtItemName.setText("");
        txtItemUnit.setText("");
        txtItemPrice.setText("");
        cbxColloborating.setSelected(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSuppliers = new javax.swing.JTable();
        btnNewSup = new javax.swing.JButton();
        btnSaveSup = new javax.swing.JButton();
        btnDeleteSup = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        panelSup = new javax.swing.JPanel();
        txtSupCode = new javax.swing.JTextField();
        txtSupName = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextField();
        cbxColloborating = new javax.swing.JCheckBox();
        lbCode = new javax.swing.JLabel();
        lbAddress = new javax.swing.JLabel();
        lbName = new javax.swing.JLabel();
        lbCollobrating = new javax.swing.JLabel();
        btnLogout1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblItems = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        btnNewItem = new javax.swing.JButton();
        btnSaveItem = new javax.swing.JButton();
        btnDeleteItem = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtItemCode = new javax.swing.JTextField();
        txtItemName = new javax.swing.JTextField();
        txtItemUnit = new javax.swing.JTextField();
        txtItemPrice = new javax.swing.JTextField();
        cbxSupplying = new javax.swing.JCheckBox();
        cbItem = new javax.swing.JComboBox<>();
        btnNext = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnLogout2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Manager Program");

        jPanel1.setToolTipText("");

        tblSuppliers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblSuppliers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSuppliersMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblSuppliersMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblSuppliers);

        btnNewSup.setText("New");
        btnNewSup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewSupActionPerformed(evt);
            }
        });

        btnSaveSup.setText("Save");
        btnSaveSup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveSupActionPerformed(evt);
            }
        });

        btnDeleteSup.setText("Delete");
        btnDeleteSup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteSupActionPerformed(evt);
            }
        });

        jLabel17.setBackground(new java.awt.Color(255, 255, 255));
        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 204, 255));
        jLabel17.setText("Supplier List");

        panelSup.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Supplier Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 51, 255))); // NOI18N

        cbxColloborating.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxColloboratingActionPerformed(evt);
            }
        });

        lbCode.setText("Code");

        lbAddress.setText("Address");
        lbAddress.setToolTipText("");

        lbName.setText("Name");

        lbCollobrating.setText("Collaborating");

        javax.swing.GroupLayout panelSupLayout = new javax.swing.GroupLayout(panelSup);
        panelSup.setLayout(panelSupLayout);
        panelSupLayout.setHorizontalGroup(
            panelSupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSupLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelSupLayout.createSequentialGroup()
                        .addGroup(panelSupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbCode)
                            .addComponent(lbName))
                        .addGap(54, 54, 54)
                        .addGroup(panelSupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSupName, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                            .addComponent(txtSupCode)))
                    .addGroup(panelSupLayout.createSequentialGroup()
                        .addGroup(panelSupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbCollobrating)
                            .addComponent(lbAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(panelSupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAddress)
                            .addGroup(panelSupLayout.createSequentialGroup()
                                .addComponent(cbxColloborating, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        panelSupLayout.setVerticalGroup(
            panelSupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSupLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(panelSupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSupCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbCode))
                .addGap(29, 29, 29)
                .addGroup(panelSupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSupName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbName))
                .addGap(27, 27, 27)
                .addGroup(panelSupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelSupLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lbAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 26, Short.MAX_VALUE)
                .addGroup(panelSupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbxColloborating)
                    .addComponent(lbCollobrating, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        btnLogout1.setText("Log out");
        btnLogout1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogout1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnNewSup)
                                .addGap(62, 62, 62)
                                .addComponent(btnSaveSup)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                                .addComponent(btnDeleteSup))
                            .addComponent(panelSup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(14, 14, 14))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnLogout1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(panelSup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDeleteSup)
                            .addComponent(btnSaveSup)
                            .addComponent(btnNewSup)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(btnLogout1)
                .addGap(33, 33, 33))
        );

        jTabbedPane1.addTab("Suppliers", jPanel1);

        tblItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblItems.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblItemsMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblItemsMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tblItems);

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 204, 255));
        jLabel9.setText("Item List");

        btnNewItem.setText("New");
        btnNewItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewItemActionPerformed(evt);
            }
        });

        btnSaveItem.setText("Save");
        btnSaveItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveItemActionPerformed(evt);
            }
        });

        btnDeleteItem.setText("Delete");
        btnDeleteItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteItemActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Item Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 51, 255))); // NOI18N

        jLabel11.setText("Code");

        jLabel12.setText("Name");

        jLabel13.setText("Supplier:");

        jLabel14.setText("Unit:");

        jLabel15.setText("Price:");

        jLabel16.setText("Supplying:");

        txtItemUnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtItemUnitActionPerformed(evt);
            }
        });

        cbItem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbItem.setToolTipText("");
        cbItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbItemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtItemCode)
                    .addComponent(txtItemName)
                    .addComponent(txtItemUnit)
                    .addComponent(txtItemPrice)
                    .addComponent(cbxSupplying, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbItem, 0, 227, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtItemCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtItemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbItem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtItemUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtItemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cbxSupplying, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        btnNext.setText(">");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnBack.setText("<");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel5.setText("Back");

        jLabel6.setText("Next");

        jLabel7.setText("1");

        jLabel8.setText("/   3");

        btnLogout2.setText("Log out");
        btnLogout2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogout2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(btnBack)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(71, 71, 71)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnNext)))
                            .addComponent(btnLogout2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(btnNewItem, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(56, 56, 56)
                                .addComponent(btnSaveItem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnDeleteItem)))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBack)
                            .addComponent(btnNext)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNewItem)
                    .addComponent(btnSaveItem)
                    .addComponent(btnDeleteItem)
                    .addComponent(btnLogout2))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Items", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteSupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteSupActionPerformed
        // TODO add your handling code here:
        try {
            if (selectSup == true) {

                int confirm = JOptionPane.showConfirmDialog(this, "Do you want to remove?", "Remove?", JOptionPane.OK_CANCEL_OPTION);
                if (confirm == JOptionPane.OK_OPTION) {

                    try {
                        String supCode = txtSupCode.getText();
                        SupplierDAO dao = new SupplierDAO();
                        dao.deleteSup(supCode);
                        int row = tblSuppliers.getSelectedRow();
                        String supCodeName = vectorSup.get(row).getSupCode().trim();
                        int pos = findID(supCodeName);
                        System.out.println(pos);
                        cbItem.removeItemAt(pos);

                        modelSup.removeRow(row);
                        vectorSup.remove(row);
                        clearTxtSup();
                        cbItem.updateUI();
                        clearTxtSup();

                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, "Please delete all items first.");

                    }
                }
                selectSup = false;
            } else {
                JOptionPane.showMessageDialog(this, "Please select an item to delete");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error");
            Logger.getLogger(ManagerProgram.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnDeleteSupActionPerformed

    private void btnSaveSupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveSupActionPerformed
        // TODO add your handling code here:
        try {
            if (addSup == true || selectSup == true) {
                String supCode = txtSupCode.getText();
                String supName = txtSupName.getText();
                String address = txtAddress.getText();
                boolean colloborating = cbxColloborating.isSelected();
                SupplierDTO sup = new SupplierDTO(supCode, supName, address, colloborating);
                SupplierDAO dao = new SupplierDAO();

                if (!valid(supCode, "\\D{2,3}", "sup code (Format code: XXX)")) {
                    txtSupCode.requestFocus();
                    return;
                }
                if (!valid(supName, "([A-Z][a-z]*((\\s)))+[A-Z][a-z]*$", "sup name")) {
                    txtSupName.requestFocus();
                    return;
                }
                if (!valid(address, "[a-zA-Z0-9\\s.,]{3,30}", "address")) {
                    txtAddress.requestFocus();
                    return;
                }
                if (addSup == true) {
                    try {
                        dao.insertSup(sup);
                        vectorSup.add(sup);
                        modelSup.addRow(sup.toVector());
                        nameSup.add(vectorSup.lastElement().getSupCode() + "-" + vectorSup.lastElement().getSupName());
                        cbItem.addItem(nameSup.lastElement().toString());
                        cbItem.updateUI();
                        clearTxtSup();
                        addSup = false;
                        JOptionPane.showMessageDialog(this, "Insert successfully");
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, "The key existed");
                    }

                } else if (selectSup == true) {
                    try {
                        dao.updateSup(sup);
                        int row = tblSuppliers.getSelectedRow();
                        vectorSup.remove(row);
                        vectorSup.add(row, sup);
                        modelSup.removeRow(row);
                        modelSup.insertRow(row, sup.toVector());
                        String supcode = vectorSup.get(row).getSupCode();

                        int pos = findID(supcode);
                        nameSup.setElementAt(vectorSup.get(row).getSupCode() + "-" + vectorSup.get(row).getSupName(), pos);
                        cbItem.removeItemAt(pos);
                        cbItem.insertItemAt(nameSup.get(pos).toString().trim(), pos);
                        cbItem.updateUI();

                        for (int i = 0; i < modelItems.getRowCount(); i++) {
                            if (nameSup.get(pos).toString().trim().contains(vector.get(i).getSubCode())) {
                                modelItems.setValueAt(nameSup.get(pos).toString(), i, 2);

                            }
                        }
                        JOptionPane.showMessageDialog(this, "Update successfully");
                        clearTxtSup();
                        selectSup = false;
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(this, "Error");
                        Logger.getLogger(ManagerProgram.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }
            } else {
                JOptionPane.showMessageDialog(this, "please click New to add a new Supplier or select an Supplier to update ");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error");
            Logger.getLogger(ManagerProgram.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnSaveSupActionPerformed

    private void btnNewSupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewSupActionPerformed
        // TODO add your handling code here:
        txtSupCode.setEnabled(true);
        txtSupName.setEnabled(true);
        txtAddress.setEnabled(true);
        cbxColloborating.setEnabled(true);

        txtSupCode.setEditable(true);
        txtSupCode.setText("");
        txtSupName.setText("");
        txtAddress.setText("");
        txtSupCode.requestFocus();
        addSup = true;
        selectSup = false;
    }//GEN-LAST:event_btnNewSupActionPerformed

    private void tblSuppliersMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSuppliersMouseReleased
        // TODO add your handling code here:
        int row = tblSuppliers.getSelectedRow();
        int col = tblSuppliers.getSelectedColumn();
        tblSuppliers.getCellEditor(row, col).cancelCellEditing();
    }//GEN-LAST:event_tblSuppliersMouseReleased

    private void tblSuppliersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSuppliersMouseClicked
        // TODO add your handling code here:
        txtSupCode.setEnabled(false);
        txtSupName.setEnabled(true);
        txtAddress.setEnabled(true);
        cbxColloborating.setEnabled(true);

        int row = tblSuppliers.getSelectedRow();
        txtSupCode.setText((String) tblSuppliers.getValueAt(row, 0));
        txtSupCode.setEditable(false);
        txtSupName.setText((String) tblSuppliers.getValueAt(row, 1));
        txtAddress.setText((String) tblSuppliers.getValueAt(row, 2));
        cbxColloborating.setSelected(vectorSup.get(row).isCollorating());
        selectSup = true;
        addSup = false;
    }//GEN-LAST:event_tblSuppliersMouseClicked

    private void tblItemsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblItemsMouseClicked
        // TODO add your handling code here:
        txtItemCode.setEnabled(false);
        txtItemName.setEnabled(true);
        cbItem.setEnabled(true);
        txtItemUnit.setEnabled(true);
        txtItemPrice.setEnabled(true);
        cbxSupplying.setEnabled(true);

        try {
            int row = tblItems.getSelectedRow();

            txtItemCode.setEditable(false);
            txtItemCode.setText((String) tblItems.getValueAt(row, 0));
            txtItemName.setText((String) tblItems.getValueAt(row, 1));
            String supCode_Name = (String) tblItems.getValueAt(row, 2);
            count = findID(supCode_Name);
            cbItem.setSelectedIndex(count);
            txtItemUnit.setText((String) tblItems.getValueAt(row, 3));
            txtItemPrice.setText(Integer.toString((int) tblItems.getValueAt(row, 4)));
            cbxSupplying.setSelected((Boolean) tblItems.getValueAt(row, 5));
            selectItem = true;
            addItem = false;

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error");
            Logger.getLogger(ManagerProgram.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_tblItemsMouseClicked

    private void btnNewItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewItemActionPerformed
        txtItemCode.setEnabled(true);
        txtItemName.setEnabled(true);
        cbItem.setEnabled(true);
        txtItemUnit.setEnabled(true);
        txtItemPrice.setEnabled(true);
        cbxSupplying.setEnabled(true);

        txtItemCode.setEditable(true);
        txtItemCode.setText("");
        txtItemName.setText("");
        txtItemUnit.setText("");
        txtItemPrice.setText("");
        txtItemCode.requestFocus();
        addItem = true;
        selectItem = false;
    }//GEN-LAST:event_btnNewItemActionPerformed

    private void btnSaveItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveItemActionPerformed
        // TODO add your handling code here:
        try {
            if (addItem == true || selectItem == true) {
                String code = txtItemCode.getText();
                if (!valid(code, "(E)\\d{4}", "item code (Format: EXXXX)")) {
                    txtItemCode.requestFocus();
                    return;
                }
                String name = txtItemName.getText();
                if (!valid(name, "[A-za-z0-9\\s]{1,50}", "item name")) {
                    txtItemName.requestFocus();
                    return;
                }
                String unit = txtItemUnit.getText();
                if (!valid(unit, "[A-za-z0-9\\S\\s]{1,30}", "unit")) {
                    txtItemUnit.requestFocus();
                    return;
                }
                String supCode_Name = cbItem.getItemAt(cbItem.getSelectedIndex());
                {
                    StringTokenizer stk = new StringTokenizer(supCode_Name, "-", true);
                    supCode_Name = stk.nextToken().trim();

                }
                int price = 0;
                try {
                    Integer.parseInt(txtItemPrice.getText().trim());
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Please input a number");
                    return;
                }
                price = txtItemPrice.getText().trim().equals("") ? 0 : Integer.parseInt(txtItemPrice.getText().trim());
                if (!valid(Integer.toString(price), "\\d{0,9999999}", "price")) {
                    txtItemPrice.requestFocus();
                    return;
                }
                boolean supllying = cbxSupplying.isSelected();

                ItemDTO item = new ItemDTO(code, name, supCode_Name, unit, price, supllying);
                ItemDAO dao = new ItemDAO();
                if (addItem == true) {
                    try {
                        dao.insertItem(item);
                        vector.add(item);
                        modelItems.addRow(item.getVector());
                        modelItems.setValueAt(nameSup.get(findID(item.getSubCode())), modelItems.getRowCount() - 1, 2);

                        clearTxtItem();
                        addItem = false;
                        JOptionPane.showMessageDialog(this, "Insert successfully");
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, "The key existed");

                    }
                } else if (selectItem == true) {
                    try {
                        dao.updateItem(item);
                        int row = tblItems.getSelectedRow();
                        vector.remove(row);
                        vector.add(row, item);
                        modelItems.removeRow(row);
                        modelItems.insertRow(row, item.getVector());
                        modelItems.setValueAt(nameSup.get(findID(item.getSubCode())), row, 2);
                        clearTxtItem();
                        selectItem = false;
                        JOptionPane.showMessageDialog(this, "Update successfully");
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "Please press New to add or select an item to update info");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error");
            Logger.getLogger(ManagerProgram.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnSaveItemActionPerformed

    private void btnDeleteItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteItemActionPerformed
        // TODO add your handling code here:
        try {
            if (selectItem == true) {
                int confirm = JOptionPane.showConfirmDialog(this, "Do you want to remove?", "Remove?", JOptionPane.OK_CANCEL_OPTION);
                if (confirm == JOptionPane.OK_OPTION) {
                    String itemCode = txtItemCode.getText();
                    ItemDAO dao = new ItemDAO();
                    try {
                        dao.deteleItem(itemCode);
                        int row = tblItems.getSelectedRow();
                        modelItems.removeRow(row);
                        vector.remove(row);
                        clearTxtItem();
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }

            } else {
                JOptionPane.showMessageDialog(this, "Please select an item to delete");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error");
            Logger.getLogger(ManagerProgram.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnDeleteItemActionPerformed

    private void txtItemUnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtItemUnitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtItemUnitActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        if (page < numberpage) {
            page++;
            viewItems(page);
            if (page == 2) {
                jLabel7.setText("2");
            }
            if (page == 3) {
                jLabel7.setText("3");
            }

        } else {

        }
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        if (page > 1) {
            page--;
            viewItems(page);
            if (page == 1) {
                jLabel7.setText("1");
            }
            if (page == 2) {
                jLabel7.setText("2");
            }

        } else {
        }
    }//GEN-LAST:event_btnBackActionPerformed

    private void tblItemsMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblItemsMouseReleased
        // TODO add your handling code here:
        int row = tblItems.getSelectedRow();
        int col = tblItems.getSelectedColumn();
        tblItems.getCellEditor(row, col).cancelCellEditing();
    }//GEN-LAST:event_tblItemsMouseReleased

    private void cbxColloboratingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxColloboratingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxColloboratingActionPerformed

    private void btnLogout1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogout1ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new LoginForm().setVisible(true);
    }//GEN-LAST:event_btnLogout1ActionPerformed

    private void btnLogout2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogout2ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new LoginForm().setVisible(true);
    }//GEN-LAST:event_btnLogout2ActionPerformed

    private void cbItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManagerProgram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManagerProgram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManagerProgram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManagerProgram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManagerProgram().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDeleteItem;
    private javax.swing.JButton btnDeleteSup;
    private javax.swing.JButton btnLogout1;
    private javax.swing.JButton btnLogout2;
    private javax.swing.JButton btnNewItem;
    private javax.swing.JButton btnNewSup;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnSaveItem;
    private javax.swing.JButton btnSaveSup;
    private javax.swing.JComboBox<String> cbItem;
    private javax.swing.JCheckBox cbxColloborating;
    private javax.swing.JCheckBox cbxSupplying;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lbAddress;
    private javax.swing.JLabel lbCode;
    private javax.swing.JLabel lbCollobrating;
    private javax.swing.JLabel lbName;
    private javax.swing.JPanel panelSup;
    private javax.swing.JTable tblItems;
    private javax.swing.JTable tblSuppliers;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtItemCode;
    private javax.swing.JTextField txtItemName;
    private javax.swing.JTextField txtItemPrice;
    private javax.swing.JTextField txtItemUnit;
    private javax.swing.JTextField txtSupCode;
    private javax.swing.JTextField txtSupName;
    // End of variables declaration//GEN-END:variables
}
